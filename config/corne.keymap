/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define LOWER 1
#define UPPER 2

/ {
    macros {
        daj_chrupka: daj_chrupka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(D) &kp A &kp J &kp SPACE &kp C &kp H &kp R &kp U &kp P &kp K &kp A>;
            label = "DAJ_CHRUPKA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |       |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M   |  ,  |  .  |  /  | RSHIFT |
            //         | LCTRL | LGUI(ENT) | LWR(SPACE)|  | RISE | ALT | BKSP |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R         &kp T          &kp Y  &kp U     &kp I         &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D      &kp F         &kp G          &kp H  &kp J     &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V         &kp B          &kp N  &kp M     &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &mt LGUI RET  &lt 1 SPACE    &mo 2  &kp RALT  &daj_chrupka
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |CAPS |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |LALT |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  =  |
            // |     |     |     |     |    |USB/BT|   | BT0 | BT1 | BT2 | BT3 | BT4 |BTCLR|   
            //                 |LC(LALT)|     |     | |     |     |     |

            bindings = <
&kp CAPS  &kp N1    &kp N2  &kp N3             &kp N4            &kp N5          &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp DEL
&kp LALT  &kp EXCL  &kp AT  &kp HASH           &kp DLLR          &kp PRCNT       &kp CARET     &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &kp EQUAL
&trans    &trans    &trans  &ext_power EP_OFF  &ext_power EP_ON  &out OUT_TOG    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                            &kp LC(LALT)       &trans            &trans          &trans        &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | F12 | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | F11 |
            // |  -  |  =  |  [  |  ]  |  \  |  `  |   | LFT | DWN |  UP | RGT |HOME | END  | 
            // |  _  |  +  |  {  |  }  | "|" |  ~  |   |PLAY |VOL- |VOL+ |MUTE | NXT |PRTSCR|
            //                    |     |LGUI(RET)|ALT(SPC)| |     |     |     |

            bindings = <
&kp F12    &kp F1     &kp F2    &kp F3    &kp F4       &kp F5           &kp F6    &kp F7    &kp F8             &kp F9        &kp F10     &kp F11
&kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH     &kp GRAVE        &kp LEFT  &kp DOWN  &kp UP             &kp RIGHT     &kp END     &kp PRINTSCREEN
&kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE     &kp TILDE        &kp HOME  &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT
                                &trans    &kp LG(RET)  &kp LA(SPACE)    &trans    &trans    &trans
            >;
        };
    };
};
