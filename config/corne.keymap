/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define LOWER 1
#define UPPER 2

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | ESC  |  A  |  S  |  D  |  F  |  G  |       |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M   |  ,  |  .  |  /  | RSHIFT |
//         | LCTRL | LWR(SPACE) | LGUI(ENT)|  | RISE | ALT | BKSP |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T              &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp ESC   &kp A &kp S &kp D &kp F &kp G              &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B              &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
         &kp LCTRL &lt LOWER SPACE &mt LGUI RET    &mo UPPER  &kp RALT &kp BKSP 
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  -  |
// |     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  =  |
// |     |     |     |     |     |     |   | BT0 | BT1 | BT2 | BT3 | BT4 |BTCLR|   
//                    |     |     |     | |     |     |     |
                        bindings = <
   &kp TAB    &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                      &kp N6       &kp N7       &kp N8          &kp N9       &kp N0       &kp MINUS
   &trans     &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                   &kp CARET    &kp AMPS     &kp KP_MULTIPLY &kp LPAR     &kp RPAR     &kp EQUAL
   &trans     &trans     &trans     &trans    &trans    &trans                      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2    &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR  
                                            &trans  &trans  &trans                      &trans  &trans  &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |CAPS |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// |  -  |  =  |  [  |  ]  |  \  |  `  |   | LFT | DWN |  UP | RGT |HOME | END  | 
// |  _  |  +  |  {  |  }  | "|" |  ~  |   |PLAY |VOL- |VOL+ |MUTE | NXT |PRTSCR|
//                    |     |     |     | |     |     |     |
                        bindings = <
   &kp CAPS       &kp EXCL    &kp AT      &kp HASH    &kp DLLR   &kp PRCNT        &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
   &kp MINUS    &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH   &kp GRAVE        &kp LEFT    &kp DOWN  &kp UP           &kp RIGHT &kp HOME    &kp END
   &kp UNDER    &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE   &kp TILDE        &kp C_PP &kp C_VOL_DOWN &kp C_VOL_UP   &kp C_MUTE &kp C_FF &kp PSCRN
                        	      &trans &trans   &trans                                &trans   &trans    &trans
                        >;
                };
        };
};
